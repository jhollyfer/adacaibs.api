openapi: "3.0.0"
info:
  title: "Adacaibs API"
  version: "1.0.0"
  description: ""
components:
  responses:
    Forbidden:
      description: "Access token is missing or invalid"
    Accepted:
      description: "The request was accepted"
    Created:
      description: "The resource has been created"
    NotFound:
      description: "The resource has been created"
    NotAcceptable:
      description: "The resource has been created"
  securitySchemes:
    BearerAuth:
      type: "http"
      scheme: "bearer"
    BasicAuth:
      type: "http"
      scheme: "basic"
    ApiKeyAuth:
      type: "apiKey"
      in: "header"
      name: "X-API-Key"
  schemas:
    Any:
      description: "Any JSON object not defined as schema"
    PaginationMeta:
      type: "object"
      properties:
        total:
          type: "number"
          example: 100
          nullable: false
        page:
          type: "number"
          example: 2
          nullable: false
        perPage:
          type: "number"
          example: 10
          nullable: false
        currentPage:
          type: "number"
          example: 3
          nullable: false
        lastPage:
          type: "number"
          example: 10
          nullable: false
        firstPage:
          type: "number"
          example: 1
          nullable: false
        lastPageUrl:
          type: "string"
          example: "/?page=10"
          nullable: false
        firstPageUrl:
          type: "string"
          example: "/?page=1"
          nullable: false
        nextPageUrl:
          type: "string"
          example: "/?page=6"
          nullable: false
        previousPageUrl:
          type: "string"
          example: "/?page=5"
          nullable: false
paths:
  /authentication/sign-in:
    post:
      summary: "Autenticação de Usuário (handle)"
      description: "Returns **201** (Created) as **application/json**\n\n _app/infra/http/controllers/authentication/sign-in.controller.ts_ - **handle**"
      parameters: []
      tags:
        - "AUTENTICAÇÃO"
      responses:
        201:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  token: "xxxxxxx"
              example:
                token: "xxxxxxx"
          description: "Returns **201** (Created) as **application/json**"
        401:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Credencial inválida"
              example:
                message: "Credencial inválida"
          description: "Returns **401** (Unauthorized) as **application/json**"
        500:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Erro ao gerar token"
              example:
                message: "Erro ao gerar token"
          description: "Returns **500** (Internal Server Error) as **application/json**"
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email: "example@adacaibs.com"
                password: "123123123"
            example:
              email: "example@adacaibs.com"
              password: "123123123"
  /events:
    post:
      summary: "Create Event (handle)"
      description: "18:00\", \"location\": \"Centro de Convenções\", \"address\": \"Av. Principal, 1000, Centro\", \"category\": \"WORKSHOP\", \"capacity\": 50, \"description\": \"Workshop prático sobre programação\", \"detailedContent\": \"Neste workshop você aprenderá as bases da programação moderna.<br>Traga seu computador.\", \"cover\": \"https://exemplo.com/imagem.jpg\", \"createdAt\": \"2025-04-13T12:34:56.789Z\", \"updatedAt\": \"2025-04-13T12:34:56.789Z\"}\n\n _app/infra/http/controllers/event/create.controller.ts_ - **handle**"
      parameters: []
      tags:
        - "EVENTS"
      responses:
        201:
          content:
            text/plain:
              example: "{\"id\": \"1\", \"title\": \"Workshop de Programação\", \"date\": \"15/05/2025\", \"hour\": \"14:00"
          description: "18:00\", \"location\": \"Centro de Convenções\", \"address\": \"Av. Principal, 1000, Centro\", \"category\": \"WORKSHOP\", \"capacity\": 50, \"description\": \"Workshop prático sobre programação\", \"detailedContent\": \"Neste workshop você aprenderá as bases da programação moderna.<br>Traga seu computador.\", \"cover\": \"https://exemplo.com/imagem.jpg\", \"createdAt\": \"2025-04-13T12:34:56.789Z\", \"updatedAt\": \"2025-04-13T12:34:56.789Z\"}"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title: "Workshop de Programação"
                date: "15/05/2025"
                hour: "14:00 - 18:00"
                location: "Centro de Convenções"
                address: "Av. Principal, 1000, Centro"
                category: "WORKSHOP"
                capacity: 50
                description: "Workshop prático sobre programação"
                detailedContent:
                  $ref: "#/components/schemas/br"
                cover: "https://exemplo.com/imagem.jpg"
            example:
              title: "Workshop de Programação"
              date: "15/05/2025"
              hour: "14:00 - 18:00"
              location: "Centro de Convenções"
              address: "Av. Principal, 1000, Centro"
              category: "WORKSHOP"
              capacity: 50
              description: "Workshop prático sobre programação"
              detailedContent: {}
              cover: "https://exemplo.com/imagem.jpg"
  /news:
    post:
      summary: "Criação de Noticia (handle)"
      description: "Returns **201** (Created) as **application/json**\n\n _app/infra/http/controllers/new/create.controller.ts_ - **handle**"
      parameters: []
      tags:
        - "NOTICIAS"
      responses:
        201:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  title: "Notícia importante"
                  category: "EDUCATION"
                  status: "DRAFT"
                  resume: "Um breve resumo da notícia"
                  content: "Conteúdo completo da notícia"
                  cover: "https://exemplo.com/imagem.jpg"
                  tags:
                    type: "object"
                    properties:
                      0: "educação"
                      1: "tecnologia"
              example:
                title: "Notícia importante"
                category: "EDUCATION"
                status: "DRAFT"
                resume: "Um breve resumo da notícia"
                content: "Conteúdo completo da notícia"
                cover: "https://exemplo.com/imagem.jpg"
                tags:
                  - "educação"
                  - "tecnologia"
          description: "Returns **201** (Created) as **application/json**"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title: "Notícia importante"
                category: "EDUCATION"
                status: "DRAFT"
                resume: "Um breve resumo da notícia"
                content: "Conteúdo completo da notícia"
                cover: "https://exemplo.com/imagem.jpg"
                tags:
                  type: "object"
                  properties:
                    0: "educação"
                    1: "tecnologia"
            example:
              title: "Notícia importante"
              category: "EDUCATION"
              status: "DRAFT"
              resume: "Um breve resumo da notícia"
              content: "Conteúdo completo da notícia"
              cover: "https://exemplo.com/imagem.jpg"
              tags:
                - "educação"
                - "tecnologia"
  /news/{id}:
    patch:
      summary: "Atualização de Notícia (handle)"
      description: "Atualiza os dados de uma notícia existente\n\n _app/infra/http/controllers/new/update.controller.ts_ - **handle**"
      parameters:
        - in: "path"
          name: "id"
          description: "ID da notícia a ser atualizada"
          schema:
            example: ""
            type: "string"
          required: false
      tags:
        - "NOTICIAS"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id: "123"
                  title: "Notícia atualizada"
                  category: "EDUCATION"
                  status: "PUBLISHED"
                  resume: "Resumo atualizado"
                  content: "Conteúdo atualizado"
                  cover: "https://exemplo.com/nova-imagem.jpg"
                  tags:
                    type: "object"
                    properties:
                      0: "educação"
                      1: "atualização"
                  createdAt: "2023-01-01T00:00:00.000Z"
                  updatedAt: "2023-01-02T00:00:00.000Z"
              example:
                id: "123"
                title: "Notícia atualizada"
                category: "EDUCATION"
                status: "PUBLISHED"
                resume: "Resumo atualizado"
                content: "Conteúdo atualizado"
                cover: "https://exemplo.com/nova-imagem.jpg"
                tags:
                  - "educação"
                  - "atualização"
                createdAt: "2023-01-01T00:00:00.000Z"
                updatedAt: "2023-01-02T00:00:00.000Z"
          description: "Returns **200** (OK) as **application/json**"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        404:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Noticia não encontrado"
              example:
                message: "Noticia não encontrado"
          description: "Returns **404** (Not Found) as **application/json**"
        500:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Mensagem de erro interno"
              example:
                message: "Mensagem de erro interno"
          description: "Returns **500** (Internal Server Error) as **application/json**"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title: "Notícia atualizada"
                category: "EDUCATION"
                status: "PUBLISHED"
                resume: "Resumo atualizado"
                content: "Conteúdo atualizado"
                cover: "https://exemplo.com/nova-imagem.jpg"
                tags:
                  type: "object"
                  properties:
                    0: "educação"
                    1: "atualização"
            example:
              title: "Notícia atualizada"
              category: "EDUCATION"
              status: "PUBLISHED"
              resume: "Resumo atualizado"
              content: "Conteúdo atualizado"
              cover: "https://exemplo.com/nova-imagem.jpg"
              tags:
                - "educação"
                - "atualização"
    delete:
      summary: "Remoção de Notícia (handle)"
      description: "Remove uma notícia específica pelo ID\n\n _app/infra/http/controllers/new/delete.controller.ts_ - **handle**"
      parameters:
        - in: "path"
          name: "id"
          description: "ID da notícia a ser removida"
          schema:
            example: ""
            type: "string"
          required: false
      tags:
        - "NOTICIAS"
      responses:
        204:
          content:
            text/plain:
              example: "Sem conteúdo"
          description: "Returns **204** (No Content) as **text/plain**"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
        404:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Noticia não encontrada"
              example:
                message: "Noticia não encontrada"
          description: "Returns **404** (Not Found) as **application/json**"
        500:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Mensagem de erro interno"
              example:
                message: "Mensagem de erro interno"
          description: "Returns **500** (Internal Server Error) as **application/json**"
      security:
        - BearerAuth:
            - "access"
  /news/paginate:
    get:
      summary: "Lista de Noticias Paginada (handle)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/infra/http/controllers/new/paginate.controller.ts_ - **handle**"
      parameters:
        - in: "query"
          name: "page"
          description: "Número da página"
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "perPage"
          description: "Quantidade de registros por página"
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "search"
          description: "Termo de busca"
          schema:
            example: ""
            type: "string"
          required: false
      tags:
        - "NOTICIAS"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/News"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - {}
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
        401:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Não autorizado"
              example:
                message: "Não autorizado"
          description: "Returns **401** (Unauthorized) as **application/json**"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
  /podcast:
    post:
      summary: "Criação de Podcast (handle)"
      description: "Returns **201** (Created) as **application/json**\n\n _app/infra/http/controllers/podcast/create.controller.ts_ - **handle**"
      parameters: []
      tags:
        - "PODCASTS"
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example: {}
          description: "Returns **201** (Created) as **application/json**"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email: "example@adacaibs.com"
                name: "John Doe"
                role: "ADMINISTRATOR"
            example:
              email: "example@adacaibs.com"
              name: "John Doe"
              role: "ADMINISTRATOR"
  /podcast/{id}:
    patch:
      summary: " (handle)"
      description: "\n\n _app/infra/http/controllers/podcast/update.controller.ts_ - **handle**"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - ":ID"
      responses:
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json: {}
    delete:
      summary: " (handle)"
      description: "\n\n _app/infra/http/controllers/podcast/delete.controller.ts_ - **handle**"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - ":ID"
      responses:
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
  /podcast/paginate:
    get:
      summary: "Lista de Podcast Paginada (handle)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/infra/http/controllers/podcast/paginate.controller.ts_ - **handle**"
      parameters:
        - in: "query"
          name: "page"
          description: "Número da página"
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "perPage"
          description: "Quantidade de registros por página"
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "search"
          description: "Termo de busca"
          schema:
            example: ""
            type: "string"
          required: false
      tags:
        - "PODCASTS"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/User"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - {}
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
        401:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Não autorizado"
              example:
                message: "Não autorizado"
          description: "Returns **401** (Unauthorized) as **application/json**"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
  /user:
    post:
      summary: "Criação de Usuário (handle)"
      description: "Returns **201** (Created) as **application/json**\n\n _app/infra/http/controllers/user/create.controller.ts_ - **handle**"
      parameters: []
      tags:
        - "USUÁRIOS"
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example: {}
          description: "Returns **201** (Created) as **application/json**"
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email: "example@adacaibs.com"
                name: "John Doe"
                role: "ADMINISTRATOR"
            example:
              email: "example@adacaibs.com"
              name: "John Doe"
              role: "ADMINISTRATOR"
  /user/{id}:
    patch:
      summary: " (handle)"
      description: "\n\n _app/infra/http/controllers/user/update.controller.ts_ - **handle**"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - ":ID"
      responses:
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
      requestBody:
        content:
          application/json: {}
    delete:
      summary: " (handle)"
      description: "\n\n _app/infra/http/controllers/user/delete.controller.ts_ - **handle**"
      parameters:
        - in: "path"
          name: "id"
          schema:
            type: "string"
          required: true
      tags:
        - ":ID"
      responses:
        401:
          description: "Returns **401** (Unauthorized)"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
  /user/paginate:
    get:
      summary: "Lista de Usuários Paginada (handle)"
      description: "Returns **200** (OK) as **application/json**\n\n _app/infra/http/controllers/user/paginate.controller.ts_ - **handle**"
      parameters:
        - in: "query"
          name: "page"
          description: "Número da página"
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "perPage"
          description: "Quantidade de registros por página"
          schema:
            example: ""
            type: "number"
          required: false
        - in: "query"
          name: "search"
          description: "Termo de busca"
          schema:
            example: ""
            type: "string"
          required: false
      tags:
        - "USUÁRIOS"
      responses:
        200:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/User"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
              example:
                data:
                  - {}
                meta:
                  total: 100
                  page: 2
                  perPage: 10
                  currentPage: 3
                  lastPage: 10
                  firstPage: 1
                  lastPageUrl: "/?page=10"
                  firstPageUrl: "/?page=1"
                  nextPageUrl: "/?page=6"
                  previousPageUrl: "/?page=5"
          description: "Returns **200** (OK) as **application/json**"
        401:
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message: "Não autorizado"
              example:
                message: "Não autorizado"
          description: "Returns **401** (Unauthorized) as **application/json**"
        403:
          description: "Returns **403** (Forbidden)"
      security:
        - BearerAuth:
            - "access"
  /documentation:
    get:
      summary: "route"
      description: "\n\n __ - ****"
      parameters: []
      tags: []
      responses:
        200:
          description: "OK"
          content:
            application/json: {}
      security: []
  /:
    get:
      summary: "route"
      description: "\n\n __ - ****"
      parameters: []
      tags: []
      responses:
        200:
          description: "OK"
          content:
            application/json: {}
      security: []
tags:
  - name: "AUTENTICAÇÃO"
    description: "Everything related to AUTENTICAÇÃO"
  - name: "EVENTS"
    description: "Everything related to EVENTS"
  - name: "NOTICIAS"
    description: "Everything related to NOTICIAS"
  - name: ":ID"
    description: "Everything related to :ID"
  - name: "NOTICIAS"
    description: "Everything related to NOTICIAS"
  - name: "NOTICIAS"
    description: "Everything related to NOTICIAS"
  - name: "NOTICIAS"
    description: "Everything related to NOTICIAS"
  - name: "PODCASTS"
    description: "Everything related to PODCASTS"
  - name: "PODCASTS"
    description: "Everything related to PODCASTS"
  - name: "USUÁRIOS"
    description: "Everything related to USUÁRIOS"
  - name: "USUÁRIOS"
    description: "Everything related to USUÁRIOS"
