{
  "openapi": "3.0.0",
  "info": {
    "title": "Adacaibs API",
    "version": "1.0.0",
    "description": ""
  },
  "components": {
    "responses": {
      "Forbidden": {
        "description": "Access token is missing or invalid"
      },
      "Accepted": {
        "description": "The request was accepted"
      },
      "Created": {
        "description": "The resource has been created"
      },
      "NotFound": {
        "description": "The resource has been created"
      },
      "NotAcceptable": {
        "description": "The resource has been created"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Any": {
        "description": "Any JSON object not defined as schema"
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 100,
            "nullable": false
          },
          "page": {
            "type": "number",
            "example": 2,
            "nullable": false
          },
          "perPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "currentPage": {
            "type": "number",
            "example": 3,
            "nullable": false
          },
          "lastPage": {
            "type": "number",
            "example": 10,
            "nullable": false
          },
          "firstPage": {
            "type": "number",
            "example": 1,
            "nullable": false
          },
          "lastPageUrl": {
            "type": "string",
            "example": "/?page=10",
            "nullable": false
          },
          "firstPageUrl": {
            "type": "string",
            "example": "/?page=1",
            "nullable": false
          },
          "nextPageUrl": {
            "type": "string",
            "example": "/?page=6",
            "nullable": false
          },
          "previousPageUrl": {
            "type": "string",
            "example": "/?page=5",
            "nullable": false
          }
        }
      }
    }
  },
  "paths": {
    "/authentication/sign-in": {
      "post": {
        "summary": "Autenticação de Usuário (handle)",
        "description": "Returns **201** (Created) as **application/json**\n\n _app/infra/http/controllers/authentication/sign-in.controller.ts_ - **handle**",
        "parameters": [],
        "tags": [
          "AUTENTICAÇÃO"
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": "xxxxxxx"
                  }
                },
                "example": {
                  "token": "xxxxxxx"
                }
              }
            },
            "description": "Returns **201** (Created) as **application/json**"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Credencial inválida"
                  }
                },
                "example": {
                  "message": "Credencial inválida"
                }
              }
            },
            "description": "Returns **401** (Unauthorized) as **application/json**"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Erro ao gerar token"
                  }
                },
                "example": {
                  "message": "Erro ao gerar token"
                }
              }
            },
            "description": "Returns **500** (Internal Server Error) as **application/json**"
          }
        },
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": "example@adacaibs.com",
                  "password": "123123123"
                }
              },
              "example": {
                "email": "example@adacaibs.com",
                "password": "123123123"
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Criação de Usuário (handle)",
        "description": "Returns **201** (Created) as **application/json**\n\n _app/infra/http/controllers/users/create.controller.ts_ - **handle**",
        "parameters": [],
        "tags": [
          "USUÁRIOS"
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {}
              }
            },
            "description": "Returns **201** (Created) as **application/json**"
          },
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": "example@adacaibs.com",
                  "name": "John Doe",
                  "role": "ADMINISTRATOR"
                }
              },
              "example": {
                "email": "example@adacaibs.com",
                "name": "John Doe",
                "role": "ADMINISTRATOR"
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "patch": {
        "summary": " (handle)",
        "description": "\n\n _app/infra/http/controllers/users/update.controller.ts_ - **handle**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          ":ID"
        ],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        }
      },
      "delete": {
        "summary": " (handle)",
        "description": "\n\n _app/infra/http/controllers/users/remove.controller.ts_ - **handle**",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": [
          ":ID"
        ],
        "responses": {
          "401": {
            "description": "Returns **401** (Unauthorized)"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/user/paginate": {
      "get": {
        "summary": "Lista de Usuários Paginada (handle)",
        "description": "Returns **200** (OK) as **application/json**\n\n _app/infra/http/controllers/users/paginate.controller.ts_ - **handle**",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Número da página",
            "schema": {
              "example": "",
              "type": "number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Quantidade de registros por página",
            "schema": {
              "example": "",
              "type": "number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "search",
            "description": "Termo de busca",
            "schema": {
              "example": "",
              "type": "string"
            },
            "required": false
          }
        ],
        "tags": [
          "USUÁRIOS"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                },
                "example": {
                  "data": [
                    {}
                  ],
                  "meta": {
                    "total": 100,
                    "page": 2,
                    "perPage": 10,
                    "currentPage": 3,
                    "lastPage": 10,
                    "firstPage": 1,
                    "lastPageUrl": "/?page=10",
                    "firstPageUrl": "/?page=1",
                    "nextPageUrl": "/?page=6",
                    "previousPageUrl": "/?page=5"
                  }
                }
              }
            },
            "description": "Returns **200** (OK) as **application/json**"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Não autorizado"
                  }
                },
                "example": {
                  "message": "Não autorizado"
                }
              }
            },
            "description": "Returns **401** (Unauthorized) as **application/json**"
          },
          "403": {
            "description": "Returns **403** (Forbidden)"
          }
        },
        "security": [
          {
            "BearerAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/documentation": {
      "get": {
        "summary": "route",
        "description": "\n\n __ - ****",
        "parameters": [],
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": []
      }
    },
    "/": {
      "get": {
        "summary": "route",
        "description": "\n\n __ - ****",
        "parameters": [],
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": []
      }
    }
  },
  "tags": [
    {
      "name": "AUTENTICAÇÃO",
      "description": "Everything related to AUTENTICAÇÃO"
    },
    {
      "name": "USUÁRIOS",
      "description": "Everything related to USUÁRIOS"
    },
    {
      "name": ":ID",
      "description": "Everything related to :ID"
    },
    {
      "name": "USUÁRIOS",
      "description": "Everything related to USUÁRIOS"
    }
  ]
}